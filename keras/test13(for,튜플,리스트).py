######### for 문 예제
# for 변수 in 리스트(또는 튜플, 문자열):
#    수행할 문장 1
#    수행할 문장 2


# 예제
test_list = ['one','two','three']
for i in test_list:
  print(i)
# ['one', 'two', 'three'] 리스트의 첫 번째 요소인 'one'이 먼저 i 변수에 대입된 후 print(i) 문장을 수행한다. 
# 다음에 두 번째 요소 'two'가 i 변수에 대입된 후 print(i) 문장을 수행하고 리스트의 
# 마지막 요소까지 이것을 반복한다.
a = [(1,2), (3,4), (5,6)]
for (first, last) in a:
    print(first + last)
# 3,7,11 
   
######### tuple(튜플) 예제
# 튜플의 형식
# - 튜플은 콤마(,) 로 분리된 값을 의미하며 순서있는 임의의 객체의 모음이다.
# - 인덱스가 존재한다.
# - 튜플은 리스트와 유사하지만 튜플 내의 값을 변경할 수 없으므로 상수와 비슷한 속성을 가진다.
# 튜플의 표현
# - 튜플은 튜플은 콤마(,) 와 소괄호를 사용하여 설정하며 반드시 
# 콤마(,) 가 존재해야 하며 소괄호 없이 콤마(,) 로  표현할 수도 있지만 권장하지는 않는다.

b = (1) in (1,2,3)
print(b)
# True
c = (12) in (1,2,3)
print(c)
# False

# a = (1,2,3)
# b = ('시작',a,'끝')
# print(b)
# ('시작', (1, 2, 3), '끝')


#튜플 자료형 요소
# a = [1,2,3] 
# b = ( '시작',a, '끝' ) 
# print(b)
a=(1,2,3,4) 
b=(a,1,2,3)
b[0] 
print(b[0])# (1, 2, 3, 4)
# b[0][2]
print(b[0][2]) #3 인덱싱을 통한 중첩 튜플 인수를 두 번 지정할 경우 지정된 인수 위치의 값을 반환
# b[0]=(1, 2, 3, 4) 이 상태에서 [2]는 (1,2,3,4)에서 인수 값 [2]에 위치한 3을 반환한다.
### 패킹과 언패킹
#1. 패킹: 하나의 튜플 안에 여러 개의 데이터를 넣는 작업
a = (1, 2, 'python')
print(a) #(1, 2, 'python')
# 2. 언패킹: 하나의 튜플에서 여러 개의 데이터를 한꺼번에 꺼내와 각각 객체에 할당하는 작업
a = (1, 2, 'python') 
x, y, z = a # a로 정의된 튜플 인수를 x, y, z로 대치한다.
# print(x) 1
# print(z) python
###### List(리스트)

# List(리스트)(5) - 리스트 정렬

# reverse : 리스트를 거꾸로 뒤집는다. desc 정렬이 아님
#  a = [1, 10, 5, 7, 6]
#  a.reverse()
#  print(a)
# [6, 7, 5, 10, 1]

# sort : 정렬, 기본값은 오름차순 정렬, reverse옵션 True는 내림차순 정렬
#  a = [1, 10, 5, 7, 6]
#  a.sort()
#  print(a)
# [1, 5, 6, 7, 10]

#  a = [1, 10, 5, 7, 6]
#  a.sort(reverse=True)
#  print(a)
# [10, 7, 6, 5, 1]